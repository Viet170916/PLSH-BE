stages:
  - build
  - deploy

variables:
  DOTNET_VERSION: 8.0

build_fe_borrower_project:
  stage: build
  image: node:22.13.0
  cache:
    paths:
      - node_modules/
      
  before_script:
    - source ~/.profile
    - source ~/.bashrc
    - export PATH="$PATH:~/.nvm/versions/node/v22.13.0/bin"
  script:
    - cd ./plsh-fe-borrower
    - yarn install
    - npm run build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "client/borrower/develop"'
      when: always


build_fe_librarian_project:
  stage: build
  image: node:22.13.0
  cache:
    paths:
      - node_modules/
  before_script:
    - source ~/.profile
    - source ~/.bashrc
    - export PATH="$PATH:~/.nvm/versions/node/v22.13.0/bin"
  script:
    - cd ./plsh-fe-librarian
    - yarn install
    - npm run build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "client/librarian/develop"'
      when: always
  # only:
  #   - merge_requests
  #   - client/librarian/develop

build_be:
  image: mcr.microsoft.com/dotnet/sdk:8.0
  stage: build
  script:
    - cd ./PLSH-BE
    - echo "Restoring .NET dependencies"
    - dotnet restore PLSH-BE.sln
    - echo "Building the application"
    - dotnet build PLSH-BE.sln --configuration Release
    - echo "Publishing the solution"
    - dotnet publish PLSH-BE.sln --configuration Release --output ./publish
 
  artifacts:
    paths:
      - PLSH-BE/publish
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "server/develop"'
      when: always


deploy_be:
  stage: deploy
  image: mcr.microsoft.com/dotnet/sdk:8.0
  before_script:
    - 'which ssh-agent || ( apt-get update -y && apt-get install openssh-client -y )'
    - mkdir -p ~/.ssh
    - eval "$(ssh-agent -s)"
    - 'echo "$DEPLOY_SSH_PRIVATE_KEY" > ~/.ssh/google_compute_engine'
    - chmod 600 ~/.ssh/google_compute_engine
    - ssh-add ~/.ssh/google_compute_engine
    - ssh-keyscan -H 104.197.134.164 >> ~/.ssh/known_hosts
  
  script:
    - cd ./PLSH-BE
    - echo "Deploying application to server"
    - ls ./publish
    - which scp
    - scp -o StrictHostKeyChecking=no -r ./publish/* namson023@104.197.134.164:/var/www/PLBH_App/
    - ssh -o StrictHostKeyChecking=no namson023@104.197.134.164 "systemctl restart PLBH_App.service"
  environment:
    name: production
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "server/develop"'
      when: always

